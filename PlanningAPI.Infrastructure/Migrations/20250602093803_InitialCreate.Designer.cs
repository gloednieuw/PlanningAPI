// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlanningAPI.Infrastructure;

#nullable disable

namespace PlanningAPI.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250602093803_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PlanningAPI.Model.Line", b =>
                {
                    b.Property<int>("LineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LineId"));

                    b.Property<string>("LinePlanningNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OperatorNo")
                        .HasColumnType("int");

                    b.HasKey("LineId");

                    b.HasIndex("OperatorNo");

                    b.ToTable("Lines");
                });

            modelBuilder.Entity("PlanningAPI.Model.Operator", b =>
                {
                    b.Property<int>("OperatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OperatorId"));

                    b.Property<string>("ApiEndpoint")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OperatorId");

                    b.ToTable("Operators");
                });

            modelBuilder.Entity("PlanningAPI.Model.Trip", b =>
                {
                    b.Property<int>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TripId"));

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("LineNo")
                        .HasColumnType("int");

                    b.HasKey("TripId");

                    b.HasIndex("LineNo");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("PlanningAPI.Model.UpdateLog", b =>
                {
                    b.Property<int>("UpdateLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UpdateLogId"));

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TripNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTimestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("UpdateLogId");

                    b.HasIndex("TripNo");

                    b.ToTable("UpdateLogs");
                });

            modelBuilder.Entity("PlanningAPI.Model.Line", b =>
                {
                    b.HasOne("PlanningAPI.Model.Operator", null)
                        .WithMany("Lines")
                        .HasForeignKey("OperatorNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlanningAPI.Model.Trip", b =>
                {
                    b.HasOne("PlanningAPI.Model.Line", null)
                        .WithMany("Trips")
                        .HasForeignKey("LineNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlanningAPI.Model.UpdateLog", b =>
                {
                    b.HasOne("PlanningAPI.Model.Trip", null)
                        .WithMany("UpdateLogs")
                        .HasForeignKey("TripNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlanningAPI.Model.Line", b =>
                {
                    b.Navigation("Trips");
                });

            modelBuilder.Entity("PlanningAPI.Model.Operator", b =>
                {
                    b.Navigation("Lines");
                });

            modelBuilder.Entity("PlanningAPI.Model.Trip", b =>
                {
                    b.Navigation("UpdateLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
